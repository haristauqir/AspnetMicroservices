MIT License

Copyright (c) 2021 Haris Tauqir

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


version: '3.4'

services:
  catalogdb:
    image: mongo

  basketdb:
    image: redis:alpine

  discountdb:
    image: postgres

  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest

  rabbitmq:
    image: rabbitmq:3-management-alpine
    
  pgadmin:
    image: dpage/pgadmin4  

  portainer:
    image: portainer/portainer-ce

  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile

  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile  


  shopping.aggregator:
    image: ${DOCKER_REGISTRY-}shoppingaggregator
    build:
      context: .
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile

  aspnetrunbasics:
    image: ${DOCKER_REGISTRY-}aspnetrunbasics
    build:
      context: .
      dockerfile: WebApps/AspnetRunBasics/Dockerfile

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
      
  webstatus: 
    image: ${DOCKER_REGISTRY-}webstatus
    build:
      context: .
      dockerfile: WebApps/WebStatus/Dockerfile
      
volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data:
  elasticsearch-data:



  version: '3.4'

services:
  catalogdb:
    container_name: catalogdb
    restart: always
    ports:
        - "27017:27017"
    volumes:
        - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always    
    ports:
        - "6379:6379"

  discountdb:
    container_name: discountdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
        - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  orderdb:
    container_name: orderdb
    environment:
        SA_PASSWORD: "SwN12345678"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"
    
  discount.api:
    container_name: discount.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - discountdb
    ports:
      - "8002:80"

  discount.grpc:
    container_name: discount.grpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=DiscountDb;User Id=admin;Password=admin1234;"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - discountdb
    ports:
      - "8003:80"

  ordering.api:
    container_name: ordering.api
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ConnectionStrings:OrderingConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678"   
        - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"     
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"    
    depends_on:
        - orderdb
    ports:
        - "8004:80"

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  catalog.api:
    container_name: catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://catalogdb:27017"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - catalogdb
    ports:
      - "8000:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "GrpcSettings:DiscountUrl=http://discount.grpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
      - basketdb
    ports:
      - "8001:80"

  ocelotapigw:
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - catalog.api
        - basket.api
        - discount.api
        - ordering.api
    ports:
      - "8010:80"

  shopping.aggregator:
    container_name: shopping.aggregator
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ApiSettings:CatalogUrl=http://catalog.api"
        - "ApiSettings:BasketUrl=http://basket.api"
        - "ApiSettings:OrderingUrl=http://ordering.api"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - catalog.api
        - basket.api
        - ordering.api
    ports:
        - "8005:80"

  aspnetrunbasics:
    container_name: aspnetrunbasics
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - "ApiSettings:GatewayAddress=http://ocelotapigw"
        - "ElasticConfiguration:Uri=http://elasticsearch:9200"
    depends_on:
        - ocelotapigw
        - catalog.api
        - basket.api
        - discount.api
        - ordering.api
    ports:
        - "8006:80"

  elasticsearch:
    container_name: elasticsearch
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data   

  kibana:
    container_name: kibana
    environment:        
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601"  


  webstatus:
    container_name: webstatus
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - HealthChecksUI__HealthChecks__0__Name=Catalog Health Check
        - HealthChecksUI__HealthChecks__0__Uri=http://catalog.api/hc
        - HealthChecksUI__HealthChecks__1__Name=Basket Health Check
        - HealthChecksUI__HealthChecks__1__Uri=http://basket.api/hc
        - HealthChecksUI__HealthChecks__2__Name=Discount Health Check
        - HealthChecksUI__HealthChecks__2__Uri=http://discount.api/hc
        - HealthChecksUI__HealthChecks__3__Name=Ordering Health Check
        - HealthChecksUI__HealthChecks__3__Uri=http://ordering.api/hc
        #- HealthChecksUI__HealthChecks__4__Name=Shopping Aggregator Health Check
        #- HealthChecksUI__HealthChecks__4__Uri=http://shopping.aggregator/hc
        - HealthChecksUI__HealthChecks__5__Name=AspnetRunBasics WebMVC Health Check
        - HealthChecksUI__HealthChecks__5__Uri=http://aspnetrunbasics/hc    
    ports:
        - "8007:80"